using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using System;
using System.Text;
using System.Security.Cryptography;

public class MainScript : MonoBehaviour
{
    public InputField userTextUI;
    public Dropdown userAlgoUI;
    public InputField userHashUI;

    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {
        
    }

    public void GenerateHash()
    {
        if(userTextUI.text=="")
        {
            userHashUI.text = "NULL";
            return;
        }

        // string hashOutputText = "";
        byte[] hashOutput = new byte[0];
        byte[] hashInput = new byte[0];
        hashInput = ASCIIEncoding.ASCII.GetBytes(userTextUI.text);
        
        switch(userAlgoUI.value)
        {
            case 0: break;
            case 1: // SHA1
                SHA1 sha1Gen = SHA1.Create();
                hashOutput = sha1Gen.ComputeHash(hashInput);
                break;
            case 2: // SHA256
                SHA256 sha256Gen = SHA256.Create();
                hashOutput = sha256Gen.ComputeHash(hashInput);
                break;
            case 3: // SHA512
                SHA512 sha512Gen = SHA512.Create();
                hashOutput = sha512Gen.ComputeHash(hashInput);
                break;
            case 4: // MD5
                MD5 md5Gen = MD5.Create();
                hashOutput = md5Gen.ComputeHash(hashInput);
                break;
            default: break;
        }

        userHashUI.text = GenerateHashString(hashOutput);
    }

    /* 
    Generates a string out of the byte array. The generated string shouold 
    be in the same format as the result generated by Get-FileHash in 
    Powershell.
    -Converted to Hex
    -Left padded (2,'0')
    -Uppercase
    -No space
    Examples: "abc" in SHA1 is A9993E364706816ABA3E25717850C26C9CD0D89D
    */ 
    string GenerateHashString(byte[] input)
    {
        string s = "";
        for(int i = 0; i < input.Length; i++)
            s += $"{Convert.ToString(input[i],16).PadLeft(2,'0')}";
        s = s.ToUpper();
        return s;
    }
}
